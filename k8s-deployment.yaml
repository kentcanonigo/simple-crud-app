apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: Opaque
data:
  # These should be securely generated and managed, e.g., with a secrets manager.
  # echo -n "your-root-password" | base64
  # echo -n "your-app-password" | base64
  MYSQL_ROOT_PASSWORD: cm9vdHBhc3N3b3JkMTIz # base64 for "rootpassword123"
  MYSQL_PASSWORD: dG9kb2FwcDEyMw==      # base64 for "todoapp123"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None # Headless service for StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: "mysql-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          value: "todoapp"
        - name: MYSQL_USER
          value: "todoapp"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_PASSWORD
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "linode-block-storage-retain"
      resources:
        requests:
          storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todoapp
  labels:
    app: todoapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: todoapp
  template:
    metadata:
      labels:
        app: todoapp
    spec:
      containers:
      - name: todoapp
        image: todoapp:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: todoapp-secrets
              key: database-url
        - name: PORT
          value: "5000"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: todoapp-service
  labels:
    app: todoapp
spec:
  selector:
    app: todoapp
  ports:
  - port: 80
    name: http
    targetPort: 5000
  type: NodePort
---
apiVersion: v1
kind: Secret
metadata:
  name: todoapp-secrets
type: Opaque
data:
  # mysql+pymysql://todoapp:todoapp123@mysql-service.todo-app:3306/todoapp
  database-url: bXlzcWwrcHlteXNxbDovL3RvZG9hcHA6dG9kb2FwcDEyM0BteXNxbC1zZXJ2aWNlLnRvZG8tYXBwOjMzMDYvdG9kb2FwcA==
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: todoapp-monitor
  labels:
    app: todoapp
    release: prometheus
spec:
  selector:
    matchLabels:
      app: todoapp     
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s